{"version":3,"sources":["Components/Description.js","Components/PokemonThumbnail.js","App.js","index.js"],"names":["Description","heightpok","weightpok","pokstat1","pokstat2","pokstat3","pokstat4","pokstat5","pokstat6","posbs1","posbs2","posbs3","posbs4","posbs5","posbs6","capitalizeFirstLetter","string","charAt","toUpperCase","slice","className","PokemonThumbnail","id","name","image","type","height","weight","stat1","stat2","stat3","stat4","stat5","stat6","bs1","bs2","bs3","bs4","bs5","bs6","bgcolor","src","alt","tabIndex","style","App","useState","allPokemons","setAllPokemons","loadPoke","setLoadPoke","getAllPokemons","createPokemonObject","a","result","forEach","pokemon","fetch","res","json","data","currentList","next","results","useEffect","fontSize","map","index","sprites","other","dream_world","front_default","types","stats","stat","base_stat","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7c46d64.chunk.js","sourcesContent":["import React from 'react'\n\n//Destructuring the Description object to get the items out of it\nconst Description = ({ heightpok, weightpok, pokstat1, pokstat2, pokstat3, pokstat4, pokstat5, pokstat6, posbs1, posbs2, posbs3, posbs4, posbs5, posbs6 }) => {\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    return (\n        // Creating a table to accomodate all the information needed to display\n        <div className=\"desc\">\n            <table className=\"table table-hover table-striped\">\n                <tbody>\n                    <tr>\n                        <td>Height</td>\n                        <td>{heightpok * 10} cm.</td>\n                    </tr>\n                    <tr>\n                        <td>Weight</td>\n                        <td>{weightpok * 10} cm.</td>\n                    </tr>\n                    <tr>\n                        <td>{capitalizeFirstLetter(pokstat1)}</td>\n                        <td>{posbs1}</td>\n                    </tr>\n                    <tr>\n                        <td>{capitalizeFirstLetter(pokstat2)}</td>\n                        <td>{posbs2}</td>\n                    </tr>\n                    <tr>\n                        <td>{capitalizeFirstLetter(pokstat3)}</td>\n                        <td>{posbs3}</td>\n                    </tr>\n                    <tr>\n                        <td>{capitalizeFirstLetter(pokstat4)}</td>\n                        <td>{posbs4}</td>\n                    </tr>\n                    <tr>\n                        <td>{capitalizeFirstLetter(pokstat5)}</td>\n                        <td>{posbs5}</td>\n                    </tr>\n                    <tr>\n                        <td>{capitalizeFirstLetter(pokstat6)}</td>\n                        <td>{posbs6}</td>\n                    </tr>\n                </tbody>\n            </table>\n\n\n\n        </div>\n    )\n}\n\nexport default Description\n","import Description from './Description'\n\n//Destructuring the pokemonthumbnail object to get its everything\nconst PokemonThumbnail = ({ id, name, image, type, height, weight, stat1, stat2, stat3, stat4, stat5, stat6, bs1, bs2, bs3,\n    bs4, bs5, bs6 }) => {\n    //Selecting the colours for different types of pokemon\n    var bgcolor = \"\"\n    if (type === 'fire') {\n        bgcolor = 'danger'\n    }\n    else if (type === 'grass') {\n        bgcolor = 'success'\n    }\n    else if (type === 'water') {\n        bgcolor = 'water'\n    }\n    else if (type === 'bug') {\n        bgcolor = 'bug'\n    }\n    else if (type === 'electric') {\n        bgcolor = 'electric'\n    }\n    else if (type === 'poison') {\n        bgcolor = 'poison'\n    }\n    else if (type === 'fairy') {\n        bgcolor = 'fairy'\n    }\n    else if (type === 'ground') {\n        bgcolor = 'ground'\n    }\n    else if (type === 'rock') {\n        bgcolor = 'rock'\n    }\n    else if (type === 'phychic') {\n        bgcolor = 'phychic'\n    }\n    else if (type === 'ghost') {\n        bgcolor = 'ghost'\n    }\n    else {\n        bgcolor = 'else'\n    }\n    return (\n\n        <>\n            {/* Adding a card for displaying pokemon */}\n            <div className=\"col\">\n                <div className={`card h-100 bg-${bgcolor}`}>\n                    <img src={image} className=\"card-img-top h-100\" alt={name} />\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{name.toUpperCase()}</h5>\n                        <h5 className=\"card-title\">Type: {type}</h5>\n                        <button className=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target={`#${name}`}>Know More</button>\n                        {/* Modal for displaying the other information  */}\n                        <div className=\"modal fade\" id={name} tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div className={`modal-dialog  bg-${bgcolor}`}>\n                                <div className={`modal-content  `}>\n                                    <div className=\"modal-header\">\n                                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">{name.toUpperCase()}</h5>\n                                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                                    </div>\n                                    <div className=\"modal-body\">\n                                        {/* A card inside the modal to accomodate the information */}\n                                        <div className={`card bg-${bgcolor}`}>\n                                            <img src={image} className=\"card-img-top\" alt={name} style={{ height: '212px' }} />\n                                            <div className=\"card-body\">\n                                                <div className=\"text-center\">\n                                                    <h5 className=\"card-title\">{name.toUpperCase()}</h5>\n                                                    <h5 className=\"card-title\">Type: {type}</h5>\n                                                </div>\n                                                {/* <p className=\"card-text\"> */}\n                                                    {/* A call for the Description to make a table of these */}\n                                                    <Description weightpok={weight} heightpok={height} pokstat1={stat1}\n                                                        pokstat2={stat2}\n                                                        pokstat3={stat3}\n                                                        pokstat4={stat4}\n                                                        pokstat5={stat5}\n                                                        pokstat6={stat6}\n                                                        posbs1={bs1}\n                                                        posbs2={bs2}\n                                                        posbs3={bs3}\n                                                        posbs4={bs4}\n                                                        posbs5={bs5}\n                                                        posbs6={bs6}\n                                                    />\n                                                {/* </p> */}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"modal-footer\">\n                                        <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                                        {/* <button type=\"button\" className=\"btn btn-primary\">Save changes</button> */}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        </>\n    )\n}\n\nexport default PokemonThumbnail\n","import React, { useEffect, useState } from \"react\";\nimport PokemonThumbnail from \"./Components/PokemonThumbnail\";\n\n\nfunction App() {\n  const [allPokemons, setAllPokemons] = useState([]);\n  const [loadPoke, setLoadPoke] = useState('https://pokeapi.co/api/v2/pokemon?limit=20');\n\n  //Getting all the pokemon from the api\n  const getAllPokemons = async () => {\n    const res = await fetch(loadPoke)\n    const data = await res.json()\n    setLoadPoke(data.next)\n\n    //Create a pokemon Object of a particular pokemon by altering the link of api\n    function createPokemonObject(result) {\n      result.forEach(async (pokemon) => {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\n        const data = await res.json();\n        setAllPokemons(currentList => [...currentList, data])\n      });\n    }\n    createPokemonObject(data.results)\n    //await console.log(allPokemons)\n  }\n\n  useEffect(() => {\n    getAllPokemons()\n  }, [])\n\n  return (\n    <div className=\"app-container\">\n      {/* Heading of the page */}\n      <div className=\"container\">\n        <h1 className=\"text-center\" style={{ fontSize: '61px' }}>Pokemon Kingdom</h1>\n\n        {/* Adding the card groups */}\n        <div className=\"all-container\">\n          <div className=\"row row-cols-md-5 g-2\">\n            {allPokemons.map((pokemon, index) =>\n              <PokemonThumbnail\n                id={pokemon.id}\n                name={pokemon.name}\n                image={pokemon.sprites.other.dream_world.front_default}\n                type={pokemon.types[0].type.name}\n                key={index}\n                height={pokemon.height}\n                weight={pokemon.weight}\n                stat1={pokemon.stats[0].stat.name}\n                stat2={pokemon.stats[1].stat.name}\n                stat3={pokemon.stats[2].stat.name}\n                stat4={pokemon.stats[3].stat.name}\n                stat5={pokemon.stats[4].stat.name}\n                stat6={pokemon.stats[5].stat.name}\n                bs1={pokemon.stats[0].base_stat}\n                bs2={pokemon.stats[1].base_stat}\n                bs3={pokemon.stats[2].base_stat}\n                bs4={pokemon.stats[3].base_stat}\n                bs5={pokemon.stats[4].base_stat}\n                bs6={pokemon.stats[5].base_stat}\n\n              />\n            )}\n          </div>\n        </div>\n\n      </div >\n\n      {/* Button for the load more pokemon */}\n      <div className=\"text-center\">\n        <button className=\"load-more btn btn-primary btn-lg my-2\" onClick={() => getAllPokemons()}>More Pokemons</button>\n      </div>\n    </div>\n    // </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}